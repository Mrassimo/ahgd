name: Documentation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'src/**'
      - 'pyproject.toml'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'src/**'
      - 'pyproject.toml'

  # Allow manual triggering
  workflow_dispatch:

# Set permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build documentation
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for proper version detection

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install UV
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv pip install --system -e .[dev]

    - name: Install documentation dependencies
      run: |
        uv pip install --system \
          sphinx \
          sphinx-autoapi \
          furo \
          myst-parser \
          sphinx-autobuild

    - name: Build documentation
      run: |
        cd docs
        make clean
        make html

    - name: Check documentation links
      run: |
        cd docs
        make linkcheck
      continue-on-error: true  # Don't fail on broken external links

    - name: Check documentation coverage
      run: |
        cd docs
        make coverage
      continue-on-error: true

    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: docs/build/html/
        retention-days: 30

    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v3

    - name: Upload to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v2
      with:
        path: docs/build/html/

  # Deploy to GitHub Pages (only on main branch)
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # Quality checks
  quality:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install doc8 codespell

    - name: Check documentation formatting
      run: |
        doc8 docs/source/

    - name: Check spelling
      run: |
        codespell docs/source/ --skip="*.pyc,*.png,*.jpg,*.gif,*.svg" \
          --ignore-words-list="jupyter,streamlit" \
          --quiet-level=2
      continue-on-error: true

    - name: Validate reStructuredText files
      run: |
        python -m docutils.parsers.rst docs/source/index.rst /dev/null
        find docs/source/ -name "*.rst" -exec python -m docutils.parsers.rst {} /dev/null \;

  # API documentation coverage check
  api-coverage:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install UV
      uses: astral-sh/setup-uv@v2

    - name: Install dependencies
      run: |
        uv pip install --system -e .[dev]
        uv pip install --system sphinx sphinx-autoapi

    - name: Check API documentation coverage
      run: |
        cd docs
        sphinx-build -b coverage source build/coverage
        cat build/coverage/python.txt
        
        # Check if there are undocumented functions
        if grep -q "undocumented" build/coverage/python.txt; then
          echo "Warning: Found undocumented functions/classes"
          exit 1
        fi
      continue-on-error: true

  # Documentation performance test
  performance:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install UV
      uses: astral-sh/setup-uv@v2

    - name: Install dependencies
      run: |
        uv pip install --system -e .[dev]
        uv pip install --system sphinx sphinx-autoapi furo myst-parser

    - name: Build documentation with timing
      run: |
        cd docs
        time make clean
        time make html
        
        # Check build size
        du -sh build/html/
        
        # Check for large files
        find build/html/ -type f -size +1M -exec ls -lh {} \;

    - name: Test documentation server
      run: |
        cd docs/build/html
        python -m http.server 8000 &
        sleep 5
        curl -f http://localhost:8000/ > /dev/null
        kill %1