name: Deploy Australian Health Analytics to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Data processing and export job
  generate-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv sync
        
    - name: Generate web export data
      run: |
        uv run python scripts/web_export/run_web_export.py
        
    - name: Copy data to docs directory
      run: |
        cp -r data/web_exports docs/data
        
    - name: Upload data artifacts
      uses: actions/upload-artifact@v3
      with:
        name: web-data
        path: docs/data/
        retention-days: 1

  # Build and deploy to GitHub Pages
  deploy:
    needs: generate-data
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download data artifacts
      uses: actions/download-artifact@v3
      with:
        name: web-data
        path: docs/data/
        
    - name: Optimize assets for production
      run: |
        # Create optimized versions of key files
        
        # Minify CSS (basic minification)
        sed 's/  */ /g; s/: /:/g; s/; /;/g' docs/assets/css/styles.css > docs/assets/css/styles.min.css
        
        # Create favicon and other assets
        mkdir -p docs/assets/images
        
        # Generate robots.txt for SEO
        cat > docs/robots.txt << 'EOF'
        User-agent: *
        Allow: /
        
        Sitemap: https://massimoraso.github.io/australian-health-analytics/sitemap.xml
        EOF
        
        # Generate sitemap.xml for SEO
        cat > docs/sitemap.xml << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
          <url>
            <loc>https://massimoraso.github.io/australian-health-analytics/</loc>
            <lastmod>$(date +%Y-%m-%d)</lastmod>
            <changefreq>weekly</changefreq>
            <priority>1.0</priority>
          </url>
        </urlset>
        EOF
        
        # Create manifest.json for PWA features
        cat > docs/manifest.json << 'EOF'
        {
          "name": "Australian Health Analytics Platform",
          "short_name": "Health Analytics",
          "description": "Professional data engineering portfolio showcasing 497K+ health records processing",
          "start_url": "/",
          "display": "standalone",
          "background_color": "#f7fafc",
          "theme_color": "#667eea",
          "icons": [
            {
              "src": "assets/images/icon-192.png",
              "sizes": "192x192",
              "type": "image/png"
            },
            {
              "src": "assets/images/icon-512.png",
              "sizes": "512x512",
              "type": "image/png"
            }
          ]
        }
        EOF
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./docs
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

  # Performance testing job
  test-performance:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.12.x
        
    - name: Run Lighthouse CI
      run: |
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        
  # Notification job
  notify:
    needs: [generate-data, deploy, test-performance]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Deployment Status
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "✅ Australian Health Analytics successfully deployed to GitHub Pages"
          echo "🌐 Portfolio available at: https://massimoraso.github.io/australian-health-analytics/"
          echo "📊 Data processing: ${{ needs.generate-data.result }}"
          echo "🚀 Deployment: ${{ needs.deploy.result }}"
          echo "⚡ Performance: ${{ needs.test-performance.result }}"
        else
          echo "❌ Deployment failed"
          echo "📊 Data processing: ${{ needs.generate-data.result }}"
          echo "🚀 Deployment: ${{ needs.deploy.result }}"
          echo "⚡ Performance: ${{ needs.test-performance.result }}"
          exit 1
        fi